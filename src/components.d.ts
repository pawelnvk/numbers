/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';
import '@stencil/state-tunnel';


declare global {

  namespace StencilComponents {
    interface AppButton {
      'type': string;
    }
  }

  interface HTMLAppButtonElement extends StencilComponents.AppButton, HTMLStencilElement {}

  var HTMLAppButtonElement: {
    prototype: HTMLAppButtonElement;
    new (): HTMLAppButtonElement;
  };
  interface HTMLElementTagNameMap {
    'app-button': HTMLAppButtonElement;
  }
  interface ElementTagNameMap {
    'app-button': HTMLAppButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-button': JSXElements.AppButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface AppButtonAttributes extends HTMLAttributes {
      'type'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppForm {
      'onFormSubmit': (values: Object) => void;
    }
  }

  interface HTMLAppFormElement extends StencilComponents.AppForm, HTMLStencilElement {}

  var HTMLAppFormElement: {
    prototype: HTMLAppFormElement;
    new (): HTMLAppFormElement;
  };
  interface HTMLElementTagNameMap {
    'app-form': HTMLAppFormElement;
  }
  interface ElementTagNameMap {
    'app-form': HTMLAppFormElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-form': JSXElements.AppFormAttributes;
    }
  }
  namespace JSXElements {
    export interface AppFormAttributes extends HTMLAttributes {
      'onFormSubmit'?: (values: Object) => void;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppHeader {

    }
  }

  interface HTMLAppHeaderElement extends StencilComponents.AppHeader, HTMLStencilElement {}

  var HTMLAppHeaderElement: {
    prototype: HTMLAppHeaderElement;
    new (): HTMLAppHeaderElement;
  };
  interface HTMLElementTagNameMap {
    'app-header': HTMLAppHeaderElement;
  }
  interface ElementTagNameMap {
    'app-header': HTMLAppHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-header': JSXElements.AppHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHeaderAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppInput {
      'name': string;
      'placeholder': string;
    }
  }

  interface HTMLAppInputElement extends StencilComponents.AppInput, HTMLStencilElement {}

  var HTMLAppInputElement: {
    prototype: HTMLAppInputElement;
    new (): HTMLAppInputElement;
  };
  interface HTMLElementTagNameMap {
    'app-input': HTMLAppInputElement;
  }
  interface ElementTagNameMap {
    'app-input': HTMLAppInputElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-input': JSXElements.AppInputAttributes;
    }
  }
  namespace JSXElements {
    export interface AppInputAttributes extends HTMLAttributes {
      'name'?: string;
      'placeholder'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppMain {

    }
  }

  interface HTMLAppMainElement extends StencilComponents.AppMain, HTMLStencilElement {}

  var HTMLAppMainElement: {
    prototype: HTMLAppMainElement;
    new (): HTMLAppMainElement;
  };
  interface HTMLElementTagNameMap {
    'app-main': HTMLAppMainElement;
  }
  interface ElementTagNameMap {
    'app-main': HTMLAppMainElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-main': JSXElements.AppMainAttributes;
    }
  }
  namespace JSXElements {
    export interface AppMainAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppRoot {

    }
  }

  interface HTMLAppRootElement extends StencilComponents.AppRoot, HTMLStencilElement {}

  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-root': JSXElements.AppRootAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRootAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppText {

    }
  }

  interface HTMLAppTextElement extends StencilComponents.AppText, HTMLStencilElement {}

  var HTMLAppTextElement: {
    prototype: HTMLAppTextElement;
    new (): HTMLAppTextElement;
  };
  interface HTMLElementTagNameMap {
    'app-text': HTMLAppTextElement;
  }
  interface ElementTagNameMap {
    'app-text': HTMLAppTextElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-text': JSXElements.AppTextAttributes;
    }
  }
  namespace JSXElements {
    export interface AppTextAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
